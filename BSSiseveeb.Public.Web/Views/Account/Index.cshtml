@using BSSiseveeb.Public.Web.Models
@model ChangeAccountSettingsViewModel

@{
    ViewBag.Title = "Manage";
}

<h2>Kasutaja sätted</h2>

@using (Html.BeginForm("UpdateAccount", "Account"))
{
    @Html.AntiForgeryToken()
    <p class="text-success">@Model.Message</p>
    <div>
        <h4>Muuda kasutaja sätteid</h4>
        <hr/>
        <div class="form-group">
            @Html.LabelFor(model => model.OldPassword, htmlAttributes: new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.OldPassword, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.OldPassword, "", new {@class = "text-danger"})
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.NewPassword, htmlAttributes: new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.NewPassword, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.NewPassword, "", new {@class = "text-danger"})
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.ConfirmPassword, htmlAttributes: new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.ConfirmPassword, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new {@class = "text-danger"})
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Phone, htmlAttributes: new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.Phone, new {htmlAttributes = new {@class = "form-control", @value = @Model.Phone}})
                @Html.ValidationMessageFor(model => model.Phone, "", new {@class = "text-danger"})
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Email, htmlAttributes: new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.Email, new {htmlAttributes = new {@class = "form-control", @value = @Model.Email}})
                @Html.ValidationMessageFor(model => model.Email, "", new {@class = "text-danger"})
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Messages, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.Messages, new SelectList(new List<string>{"Yes", "No"}), new { @class = "form-control", @value = @Model.Messages })
                @Html.ValidationMessageFor(model => model.Messages, "", new { @class = "text-danger" })
            </div>
        </div>
        <input type="submit" class="btn btn-submit" value="Salvesta">
    </div>
}


@section scripts {
    @Scripts.Render("~/Scripts/general.js")
    @Scripts.Render("~/bundles/jqueryval")
}