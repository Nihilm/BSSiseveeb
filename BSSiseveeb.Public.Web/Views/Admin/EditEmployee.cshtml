@using BSSiseveeb.Public.Web.Models
@model RegistrationModel

@{
    ViewBag.Title = "EditEmployee";
}

@using (Html.BeginForm("EditEmployee", "Admin"))
{
    @Html.AntiForgeryToken()
    <div class="form-horizontal">
        <h3>@Model.Name</h3>
        <h5 id="employeeStatus"></h5>
        <hr/>
        @{
            Model.Id = Model.Id;
            Model.OldRole = Model.OldRole;
        }
        <div class="form-group">
            @Html.LabelFor(model => model.Start, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="input-append date form-group col-md-10" id="dp1" data-date="" data-date-format="yyyy-mm-dd">
                @Html.EditorFor(model => model.Start, new { htmlAttributes = new { @class = "form-control", @onClick = "showDatePicker('#dp1')" }, @value = Model.Start })
                <span class="add-on"><i class="icon-th"></i></span>
                @Html.ValidationMessageFor(model => model.Start, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.BirthDay, htmlAttributes: new { @class = "control-label col-md-2" })
            <div id="Birthday" class="col-md-10" name="Birthday"></div>
            @Html.ValidationMessageFor(model => model.BirthDay, "", new { @class = "text-danger" })
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.End, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="input-append date form-group col-md-10" id="dp2" data-date="" data-date-format="yyyy-mm-dd">
                @Html.EditorFor(model => model.End, new { htmlAttributes = new { @class = "form-control", @onClick = "showDatePicker('#dp2')" }, @value = Model.End })
                <span class="add-on"><i class="icon-th"></i></span>
                @Html.ValidationMessageFor(model => model.End, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Phone, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Phone, new { htmlAttributes = new { @class = "form-control" }, @value = Model.Phone })
                @Html.ValidationMessageFor(model => model.Phone, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Skype, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Skype, new { htmlAttributes = new { @class = "form-control" }, @value = Model.Skype })
                @Html.ValidationMessageFor(model => model.Skype, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.SocialSecurityID, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.SocialSecurityID, new { htmlAttributes = new { @class = "form-control" }, @value = Model.SocialSecurityID })
                @Html.ValidationMessageFor(model => model.SocialSecurityID, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.VacationDays, htmlAttributes: new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.VacationDays, new {htmlAttributes = new {@class = "form-control"}, @value = Model.VacationDays})
                @Html.ValidationMessageFor(model => model.VacationDays, "", new {@class = "text-danger"})
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.NewRole, htmlAttributes: new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.NewRole, new SelectList(Model.Roles), new {@class = "form-control", @value = Model.NewRole})
                @Html.ValidationMessageFor(model => model.NewRole, "", new {@class = "text-danger"})
            </div>
        </div>
        @Html.HiddenFor(model => model.OldRole)
        @Html.HiddenFor(model => model.Id)
        <input type="submit" class="btn btn-submit" value="Muuda">
    </div>
}

@section scripts {
    @Scripts.Render(ScriptBundles.AdminUsers)
    @Scripts.Render("~/bundles/jqueryval")
}
